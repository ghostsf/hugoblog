<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Ghostsf&#39;s code blog</title>
    <link>http://ghostsf.github.io/tags/git/</link>
    <description>Recent content in Git on Ghostsf&#39;s code blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 25 May 2018 10:40:26 +0800</lastBuildDate>
    
	<atom:link href="http://ghostsf.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git</title>
      <link>http://ghostsf.github.io/posts/git/</link>
      <pubDate>Fri, 25 May 2018 10:40:26 +0800</pubDate>
      
      <guid>http://ghostsf.github.io/posts/git/</guid>
      <description>Git教程笔记 教程来自:廖雪峰的官方网站
Git简介 Git的诞生 Linux的创始人Linus在2005年花两周时间用C语言写成，迅速成为最流行的分布式版本控制系统。
2008年Github网站上线，它为开源项目免费提供Git存储。
集中式VS分布式 CVS和SVN都是集中式版本控制系统，而Git是分布式版本控制系统。
集中式版本控制系统的版本库集中放在中央服务器，每次需从中央服务器取回最新版本，再开始干活，干完活再把自己的活推送给中央服务器。最大的缺点就是必须联网工作。
分布式版本控制系统没有中央服务器，每个人的电脑上都有一个完整的版本库。通常分布式版本控制系统也有一台充当“中央服务器”的电脑，但仅作用于方便“交换”大家的修改。优势是不必联网，还有强大的分支管理。
安装git 略
创建版本库  第一步，找到合适的地方，创建一个空目录  $ mkdir learngit $ cd learngit   第二步，通过git init把这个目录变成git可以管理的仓库:  $git init  可以通过ls -ah命令可以看到隐藏的.git目录。
添加文件到Git仓库  第一步，使用命令git add &amp;lt;file&amp;gt;，可反复多次使用，添加多个文件。 第二步，使用命令git commit，加上需要备注的内容，完成。  时光机穿梭  使用git status掌握仓库当前状态，如待提交等 使用git diff查看对文件进行了什么修改，difference。  版本回退 * HEAD指向的版本就是当前的版本，版本穿梭使用命令git reset --hard commit_id，上个版本是HEAD^,上上个版本是HEAD^^,往上100个版本是HEAD~100
 穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。如果嫌输出信息太多，可以加上--pretty=online参数。
 要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。
工作区和暂存区 工作区: 就是在电脑里能看到的目录
 版本库: 工作区隐藏目录.git，是Git的版本库。
  Git的版本库中存了很多东西，最重要的有暂存区(stage)，还有git为我们自动创建的第一个分支master，以及指向master的指针叫HEAD 所以git add就是把要提交的多有修改放到暂存区(stage)，然后执行git commit就可以一次性把暂存区的所有修改提交到分支。</description>
    </item>
    
  </channel>
</rss>