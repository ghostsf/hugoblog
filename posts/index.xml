<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ghostsf&#39;s code blog</title>
    <link>http://code.ghostsf.com/posts/</link>
    <description>Recent content in Posts on Ghostsf&#39;s code blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 12 Feb 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://code.ghostsf.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating a New Theme</title>
      <link>http://code.ghostsf.com/posts/creating-a-new-theme/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://code.ghostsf.com/posts/creating-a-new-theme/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;This tutorial will show you how to create a simple theme in Hugo.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mac docker安装mssql</title>
      <link>http://code.ghostsf.com/posts/mac%E5%AE%89%E8%A3%85mssql/</link>
      <pubDate>Wed, 16 May 2018 13:19:16 +0800</pubDate>
      
      <guid>http://code.ghostsf.com/posts/mac%E5%AE%89%E8%A3%85mssql/</guid>
      <description>mac docker安装mssql 1. 安装docker  阿里云提供的  http://mirrors.aliyun.com/docker-toolbox/mac/docker-for-mac/?spm=5176.8351553.0.0.400c1991vRDiR9
 官网下载  https://www.docker.com/enterprise-edition
2.设置阿里云镜像 关于加速器的地址，你只需要登录容器Hub服务的控制台，左侧的加速器帮助页面就会显示为你独立分配的加速地址。
右键点击桌面顶栏的 docker 图标，选择 Preferences ，在 Daemon 标签（Docker 17.03 之前版本为 Advanced 标签）下的 Registry mirrors 列表中将分配的加速地址加到&amp;rdquo;registry-mirrors&amp;rdquo;的数组里，点击 Apply &amp;amp; Restart按钮，等待Docker重启并应用配置的镜像加速器。
3. docker安装mssql-server-linux docker pull microsoft/mssql-server-linux
4. 启动docker镜像 docker run -d --name mssql -e&#39;ACCEPT_EULA=Y&#39; -e &#39;SA_PASSWORD=reallyStrongPwd123&#39; -p 1433:1433 microsoft/mssql-server-linux  这里是参数的解释：
 -d  此可选参数以守护进程模式启动Docker容器。 这意味着它在后台运行，不需要打开自己的终端窗口。 您可以省略此参数以使容器在其自己的“终端”窗口中运行。
 --name mssql  另一个可选参数。 这个参数允许你命名容器。 从终端停止并启动容器时，这可能非常方便。
 -e &#39;ACCEPT_EULA=Y&#39;  Y表示您同意EULA（最终用户许可协议）。 为了在Linux上运行SQL Server for Linux，这是必需的。</description>
    </item>
    
    <item>
      <title>Java学习推荐书目</title>
      <link>http://code.ghostsf.com/posts/java%E5%AD%A6%E4%B9%A0%E6%8E%A8%E8%8D%90%E4%B9%A6%E7%9B%AE/</link>
      <pubDate>Wed, 09 May 2018 09:30:28 +0800</pubDate>
      
      <guid>http://code.ghostsf.com/posts/java%E5%AD%A6%E4%B9%A0%E6%8E%A8%E8%8D%90%E4%B9%A6%E7%9B%AE/</guid>
      <description>一、基础类 1、《Thinking in java》，入门第一位是建立正确的概念。 2、《Core Java》，这本书更贴近实践，更多API的介绍，同样，更新也更频繁。
二、进阶类 1、《Effective Java》，在熟悉语法、API之后，你需要知道最佳实践和陷阱，没有比这本更好的。 2、《Java Puzzlers》，通过谜题介绍一些你可能没有注意到的边角料，作为趣味读物也不错 3、《深入Java虚拟机》，翻译一般，但不可不读，最好结合最新的JVM规范来读。
三、特定领域 1、网络编程： （1） O’Reilly的《Java nio》，很多人都推荐，我个人觉的一般，基本上只是个API更详细的说明文档,O’reilly的java系列很多都是这样。 （2）我更推荐这本《Fundamental networking in java》，由浅入深教你怎么做java网络编程，并且介绍很多背景知识，甚至介绍了各种最佳实践、网络编程模型以及Java socket在不同平台之间的差异等等。
2、并发编程： （1）《Java Concurrency in Practic》，并发领域必读经典。 （2）《Java并发编程：设计原则与模式》，同样是Doug lea的作品。 （3) 《java threads》，入门读物。
3、web编程：（待补充）
四、模式与设计
1、《设计模式》，GOF的经典。 2、《设计模式精解》，应该有最新版，个人认为更适合入门。 3、《Head first设计模式》，更轻松的入门读物。 4、《企业应用架构模式》 5、《分析模式——可复用对象模型》 6、《面向模式的软件体系结构》，国内貌似翻译了3卷，绝对经典，可惜翻译较差。 7、《重构——改善既有代码设计》,想写好代码必读。 8、《重构与模式》
五、方法论 1、《敏捷软件开发》 2、《测试驱动开发》，你不一定要TDD，但是你一定要学会做单元测试。 3、《Agile Java》，也可以作为java入门读物。 4、《快速软件开发》 5、《面向对象分析与设计》，OO设计必读。 6、《Unix编程艺术》，打开你的眼界。
六、Java之外
1、《unix网络编程》，学习网络编程必读书。 2、《C++网络编程》上下两卷，介绍ACE的，但是其中对各种模式运用的介绍非常值的一读。 3、《Joel说软件》，编程文化 4、《人月神话》、《人件》 5、《卓有成效的程序员》，给我很大启发的一本书。 6、《程序员修炼之道》 7、《计算机程序的构造与解释》，必读 8、《算法导论》，可以作为参考书 9、《深入理解计算机系统》 10、《编译原理》龙书，最新版用java解释</description>
    </item>
    
    <item>
      <title>Mysql Count</title>
      <link>http://code.ghostsf.com/posts/mysql-count/</link>
      <pubDate>Tue, 03 Apr 2018 16:04:16 +0800</pubDate>
      
      <guid>http://code.ghostsf.com/posts/mysql-count/</guid>
      <description>优化COUNT()查询 COUNT()可能是被hugo大家误解最多的函数了，它有两种不同的作用，其一是统计某个列值的数量，其二是统计行数。统计列值时，要求列值是非空的，它不会统计NULL。如果确认括号中的表达式不可能为空时，实际上就是在统计行数。最简单的就是当使用COUNT()时，并不是我们所想象的那样扩展成所有的列，实际上，它会忽略所有的列而直接统计所有的行数。 我们最常见的误解也就在这儿，在括号内指定了一列却希望统计结果是行数，而且还常常误以为前者的性能会更好。但实际并非这样，如果要统计行数，直接使用COUNT()，意义清晰，且性能更好。</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>http://code.ghostsf.com/posts/goisforlovers/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://code.ghostsf.com/posts/goisforlovers/</guid>
      <description>&lt;p&gt;Hugo uses the excellent &lt;a href=&#34;http://golang.org/&amp;gt;&#34;&gt;go&lt;/a&gt; &lt;a href=&#34;http://golang.org/pkg/html/template/&amp;gt;&#34;&gt;html/template&lt;/a&gt; library for
its template engine. It is an extremely lightweight engine that provides a very
small amount of logic.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>http://code.ghostsf.com/posts/hugoisforlovers/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://code.ghostsf.com/posts/hugoisforlovers/</guid>
      <description>&lt;h2 id=&#34;step-1-install-hugo&#34;&gt;Step 1. Install Hugo&lt;/h2&gt;

&lt;p&gt;Goto &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;hugo releases&lt;/a&gt; and download the
appropriate version for your os and architecture.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Idea Jrebel Plugin for Free</title>
      <link>http://code.ghostsf.com/posts/idea-jrebel-plugin-for-free/</link>
      <pubDate>Wed, 20 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>http://code.ghostsf.com/posts/idea-jrebel-plugin-for-free/</guid>
      <description>0x00 Installing the JRebel plugin Installing the JRebel plugin
0x01 Getting a license Getting a license to activation from “ https://my.jrebel.com &amp;ldquo;. Just complete the registration,then u can get the Activation code.
0x02 Add JRebel agent Startup configuration Adding JRebel agent to your server or standalone application
0x03 Mapping your workspace Project configuration Mapping your workspace to the deployed application
0x04 Reload your code JRebel in action Reload your code JRebel in action</description>
    </item>
    
  </channel>
</rss>